global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ""
  storage:
    mapproxyConfigProvider: "" #  -> 'DB' | 'FS' | 'S3'
    s3:
      endpointUrl: ""
      tilesBucket: ""
      sslEnabled: false
      secretName: ""
    fs:
      internalPvc:
        name: ""
        tilesSubPath: ""
        configSubPath: ""
  db:
    host: ""
    name: ""
    port: 5432
    sslEnabled: false
    schema: ""
    dbRejectUnauthorized: false
    secrets:
      useExternal: false
      externalSecretName: ""
  ca:
    secretName: ""
    path: '/usr/local/share/ca-certificates'
    key: 'ca.crt'


enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30002 #for minikube deployment only
resetOnConfigChange: true

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: 'my-registry-secret'
  flavor: openshift

image:
  repository: mapproxy-api
  tag: 'latest'

storage: 
  mapproxyConfigProvider: "" #  -> 'DB' | 'FS' | 'S3'
  s3:
    endpointUrl: ""
    tilesBucket: ""
    sslEnabled: false
    secretName: ""
  fs:
    internalPvc:
      name: ""
      tilesSubPath: ""
      configSubPath: ""
db:
  host: ""
  name: ""
  port: 5432
  sslEnabled: false
  schema: ""
  dbRejectUnauthorized: false
  secrets:
    useExternal: false
    externalSecretName: ""

# add pod annotations
# example:
# podAnnotations:
  # annotation1: annotation-value-1
  # annotation2: annotation-value-2
podAnnotations: {}

env:
  port: 80
  targetPort: 8080
  protocol: TCP
  logLevel: warn
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  mapproxyCache:
    grids: epsg4326grid
    upscaleTiles: 18
    directoryLayout: tms

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: false
  path: /
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

ingress:
  enabled: false
  type: 'nginx-org' # supported values: 'nginx-org' | 'nginx-kubernetes'
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'

local: # for local stand alone deployment, external pvc and secrets should be used for full deployment
  fs:
    createComponents: false
    storageClass: hostPath
    capacity: 5Gi
    accessMode: ReadWriteOnce
    hostPath: /hostDir
  db:
    createSecret: false
    userName: postgres
    password: postgres
    dbRejectUnauthorized: true
    certs:
      ca: certs/ca.pem
      key: certs/key.pem
      cert: certs/cert.pem
  s3:
    createSecret: false
    secretAccessKey: minioadmin
    accessKeyId: minioadmin
